# -*- coding: utf-8 -*-
"""Crane Game

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1itzIZIutK4tqJS1wnDWEGHKYhSLb07Xe
"""

class Game:
    def __init__(self):
        self.boxes = []
        self.curr_position = 0
        self.crane_hold = False
        self.N = int(input("Enter number of stacks : "))
        self.H = int(input("Enter max hiegth of stack : "))
        print("Enter the initial number of boxes in each stack, from left to right : ")
        i =0
        while(i<self.N):
            temp = int(input())
            if(temp<0):
                print("Height should be always positive ")
            elif(temp<=self.H):
                self.boxes.append(temp)
                i += 1
            else:
                print("Stack heigth cannot be more then max heigth ")
        print("Boes are : ",self.boxes)

    def move_left(self):
        if(self.curr_position==0):
            print("Already at left most position so cannot move to left ")
        else:
            self.curr_position -=1
            print("After moving now crane is at : ",self.curr_position)
        self.status()
    def move_right(self):
        if(self.curr_position==self.N-1):
            print("Already at right most position so cannot move to left ")
        else:
            self.curr_position += 1
            print("After moving now crane is at : ",self.curr_position)
        self.status()
    def drop(self):
        if(self.crane_hold==False):
            print("Crane is not holding any bos ")
        else:
            if(self.boxes[self.curr_position]>=self.H):
                print("Stack is full so cannot drop ")
            else:
                self.boxes[self.curr_position] += 1
                self.crane_hold = False
        self.status()

    def pickup(self):
        if(self.crane_hold):
            print("Already holds a box so cannot pickup ")
        else:
            if(self.boxes[self.curr_position]==0):
                print("No box at this position so cannot pick up ")
            else:
                self.boxes[self.curr_position] -= 1
                self.crane_hold = True
        self.status()

    def status(self):
        print("Boxes current status is : ",self.boxes)
        if(self.crane_hold):
            print("Crane is holding a box ")
        else:
            print("Crane is not holding any box")
        print("Crane is at : ",self.curr_position+1)

    def game_start(self):
        while(True):
            print("\n1 : Move left\n2 : Move right \n3 : Pick up box\n4 : Drop box\n0 : Quit")
            self.command = int(input("Enter commands "))
            if(self.command==1):
                # print("Moving left ")
                self.move_left()
            elif(self.command==2):
                # print("Moving right ")
                self.move_right()
            elif(self.command==3):
                # print("Picking up a box ")
                self.pickup()
            elif(self.command==4):
                # print("Dropiiing a box ")
                self.drop()
            elif(self.command==0):
                print("!!!!!!!!!!!!!!! Game Over !!!!!!!!!!!!!!!")
                break
            else:
                print("Enter valid command !!!!!")
mygame = Game()
mygame.game_start()